# -*- coding: utf-8 -*-
"""Easy_Valid Anagram.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XJtBmV7yNZkhet5EwTqn6Dl3km_wY86v
"""

'''
242. Valid Anagram
Easy
9.6K
307
Companies
Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.



Example 1:

Input: s = "anagram", t = "nagaram"
Output: true
Example 2:

Input: s = "rat", t = "car"
Output: false
'''

class Solution(object):
    def isAnagram(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
    if len(s) != len(t):
         return False

      countS, countT = {}, {}

   for i in range(len(s)):
    countS[s[i]] = 1 +  countS.get(s[i] ,0)
    countT[t[i]] = 1 +  countT.get(t[i] ,0)

     if c in countS:
   if  countS[c] != countT.get(c,0):
    return False

  return True

